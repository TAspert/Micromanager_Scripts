function mergeMMProjects(outputname,inputfolder)
%merge phylocell project into one output project and create channel
%subfolders

%How to use: Make sure to have all the folders you want to merge together inside the same folder,
%and no other folder containing .tif!
%If necessary, rename the folders so that their order by name (given by your file explorer) matches the
%temporal order.
%If you need to redo it for some reasons, it is better to delete the
%previously made
%merged folder to avoid potential conflicts of false detections.



%To the dev: careful when dealing with string, convert to char when needed! Most
%functions take char array as inputs, and NOT strings

if nargin<2
    inputfolder=pwd;
end

if nargin<1
    outputname='mergedPosProject';
end

l=dir(inputfolder);
l=l(~ismember({l.name},{'.','..'}));

cc=1;
for i=1:numel({l.name})
    if l(i).isdir==1 && ~strcmp(l(i).name,outputname)
        projectFolder{cc}=dir(strcat(l(i).folder, '/', l(i).name));
        projectFolder{cc}=projectFolder{cc}(contains({projectFolder{cc}.name},'Pos'));
        posnum=cellfun(@(x)sscanf(x,'Pos%u'), {projectFolder{cc}.name});
        [~,Sidx] = sort(posnum);
        projectFolder{cc} = projectFolder{cc}(Sidx);
        cc=cc+1;
    end
end

numberOfPos=0;
for i=1:numel(projectFolder{end})
    if strfind(projectFolder{end}(i).name,'Pos')
        numberOfPos=numberOfPos+1;
    end
end

numberOfFrames=0;
for i=1:numel(projectFolder)
    dirPos0=dir(strcat(projectFolder{i}(end).folder, '/', projectFolder{i}(end).name));
    dirPos0=dirPos0(contains({dirPos0.name},{'.tif'}));
    numberOfFrames(i)=numel({dirPos0.name});
end

numberOfChannel=0;
for t=1:numel({dirPos0.name})
    numsFile(:,t)=sscanf(dirPos0(t).name,'img_channel%u_position%u_time%u_z%u');
end
numberOfChannel=max(numsFile(1,:))+1;
%%
disp('Browsing files and folders....');

for i=1:numel(l)
    disp(['Found one MM folder: ' l(i).name]);
end

%make the merged folder
mkdir(inputfolder,outputname);
for i=1:numberOfPos
    %make the pos folders
    mkdir([inputfolder '/' outputname],sprintf('Pos%i',i-1));
    for c=1:numberOfChannel
        %make the channel folders
        mkdir([inputfolder '/' outputname '/' sprintf('Pos%i',i-1)],sprintf('Channel%i',c));
    end
end
%%
scannedFrames(1:numberOfPos,1:numberOfChannel)=0;
for i=1:numel(projectFolder) % loop on project
    for posi=1:numberOfPos %loop on Pos
        clear numsFile
        sourcePosFolder=dir(strcat(projectFolder{i}(posi).folder, '/',projectFolder{i}(posi).name));
        sourcePosFolder=sourcePosFolder(contains({sourcePosFolder.name},{'img_channel'}));
        
        clear sourceNames
        for c=1:numberOfChannel
            %extract images from channel c
            sourceNames(:,c)=string({sourcePosFolder(contains({sourcePosFolder.name},{sprintf('channel%03i',c-1)})).name});
%             %reorder timepoints: useless now that we split into channels
%             beforehand
%             for t=1:numel(sourceNames(:,c))
%             numsFile(:,t)=sscanf(sourceNames(t,c),'img_channel%u_position%u_time%u_z%u');
%             end
%             [~,SidxT] = sort(numsFile(3,:));
%             sourceNames(:,c) = sourceNames(SidxT,c);
        
            for k=1:numberOfFrames(i)/numberOfChannel %loop on timepoint

                %create the sourcenames and destinames
                posNumber=extractAfter(sourceNames(1,c),'Pos'); %useless now that pos are sorted
                destiPosFolder=[inputfolder '/' outputname, '/', 'Pos', num2str(posi), '/' sprintf('Channel%i',c)];
                
                newtime=sprintf('New%05i',scannedFrames(posi,c));
                sourcefile=char(strcat(sourcePosFolder(k).folder, '/', sourceNames(k,c)));

                %copy the files into the new merged folder
                copyfile(sourcefile, destiPosFolder)
                %rename
                destiFileName=replaceBetween(sourceNames(k,c),'_time','_z',newtime);
                movefile([destiPosFolder '/' char(sourceNames(k,c))], [destiPosFolder '/' char(destiFileName)]);
 
                scannedFrames(posi,c)=scannedFrames(posi,c)+1;
                fprintf('Processing project folder %02i, position %03i, channel%03i, frame %05i...ie %i/%i frames\n',i, posi, c-1,scannedFrames(posi,c)+1,sum(sum(scannedFrames)),sum(numberOfFrames)*numberOfPos);
            end
        end
    end
end








