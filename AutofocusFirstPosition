//Author: Th√©o ASPERT - theo.aspert@gmail.com
//This script is attached to the MDA and performs autofocus on the first position of the position list, then apply the z-offset to the rest of the positions.
//Applies at each time point before the first channel.
//It is an efficient method if your loss of focus is homogeneous (example: thermal drift of the stage) to save time in your MDA routine.
import org.micromanager.MultiStagePosition;
import org.micromanager.StagePosition;
import ij.IJ;

runnable= new Runnable(){
	xyStage = mmc.getXYStageDevice();
	zStageFocus = mmc.getFocusDevice();

	posList = mm.positions().getPositionList();
	list = posList.getPositions();
	
	// Go to pos 0 (should already be the case)
	pos0 = posList.getPosition(0);
	pos0.goToPosition(pos, mmc);

	// Record the position before autofocus
	zpos=mmc.getPosition();
	
	//Autocofus
	AfM=mm.getAutofocusManager();
	AfMM=AfM.getAutofocusMethod();
	AfMM.fullFocus();
	
	//Compute the z-offset
	offset=mmc.getPosition()-zpos;
	IJ.log("Offset is "+ offset);

	//Apply the z-offset to the positions of the list
	for (msp : list) {
		sp = msp.get(zStageFocus);
		sp.set1DPosition(zStageFocus, sp.get1DPosition() + offset);
	}
	posList.setPositions(list);
	mm.positions().setPositionList(posList);
	IJ.log("Offset applied to all positions ");
};

mm.acquisitions().clearRunnables();
//Parameters define when the runnable is run (frame,position,channel,slide)
mm.acquisitions().attachRunnable(-1,0,0,0,runnable);
mm.acquisitions().runAcquisition();
